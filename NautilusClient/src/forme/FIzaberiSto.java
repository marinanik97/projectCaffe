/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.InterfaceObjekat;
import domen.Sto;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import kontroler.Kontroler;
import transfer.ServerskiOdgovor;

/**
 *
 * @author User
 */
public class FIzaberiSto extends javax.swing.JDialog {

    boolean statusButtona;
    int broj;
    Sto izabraniSto;
    List<Sto> stolovi;
    boolean daLiJePrikaz;
    String s1 = "";
    String s2 = "";
    String s3 = "";
    String s4 = "";
    String s5 = "";
    String s6 = "";

    /**
     * Creates new form FIzaberiSto
     */
    public FIzaberiSto(java.awt.Frame parent, boolean modal, int broj) {
        super(parent, modal);
        initComponents();
        statusButtona = false;
        this.stolovi = dajMiSTolove();
        popuni();
        daLiJePrikaz = false;
        if (broj != 0) {
            setColorBtn(broj);
        }
        setLocationRelativeTo(null);

    }

    public FIzaberiSto(java.awt.Frame parent, boolean modal, boolean vrednost) {
        super(parent, modal);
        initComponents();
        this.stolovi = dajMiSTolove();
        popuni();
        daLiJePrikaz = true;
        jbtnponisti.setVisible(false);
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jbtnponisti = new javax.swing.JButton();
        jbtnizlaz = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Grafik sale");

        jButton1.setBackground(new java.awt.Color(0, 255, 0));
        jButton1.setText("1 SANK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 255, 0));
        jButton2.setText("2 SANK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 255, 0));
        jButton3.setText("1 BASTA");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 255, 0));
        jButton4.setText("2 BASTA");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 255, 0));
        jButton5.setText("1 SREDINA");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(0, 255, 0));
        jButton6.setText("2 SREDINA");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jbtnponisti.setBackground(new java.awt.Color(255, 102, 102));
        jbtnponisti.setText("Ponisti");
        jbtnponisti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnponistiActionPerformed(evt);
            }
        });

        jbtnizlaz.setText("Izlaz");
        jbtnizlaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnizlazActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnponisti)
                        .addGap(42, 42, 42)
                        .addComponent(jbtnizlaz))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnponisti)
                    .addComponent(jbtnizlaz))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (daLiJePrikaz == true) {
            JOptionPane.showMessageDialog(this, "Ovo je samo prikaz grafika sale! ");
            return;
        }
        boolean dalipostoji = false;
        if (statusButtona == false) {

            FKreirajPorudzbenicu fp = (FKreirajPorudzbenicu) getParent();
            for (Sto sto : stolovi) {
                if (sto.getPozicijaStola().equals("1 Sank")) {
                    if (sto.isStatus() == 1) {
                        JOptionPane.showMessageDialog(this, "Izabrani sto je zauzet");
                        return;
                    }
                    broj = 1;
                    setColorBtn(broj);
                    statusButtona = true;
                    izabraniSto = sto;
                    fp.setSto(izabraniSto, broj);
                    dalipostoji = true;
                }
            }
            if (dalipostoji == false) {
                JOptionPane.showMessageDialog(this, "Greska sa stolovima! ");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vec ste stavili porudzbenicu na sto! ");
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (daLiJePrikaz == true) {
            JOptionPane.showMessageDialog(this, "Ovo je samo prikaz grafika sale! ");
            return;
        }
        boolean dalipostoji = false;
        if (statusButtona == false) {

            FKreirajPorudzbenicu fp = (FKreirajPorudzbenicu) getParent();
            for (Sto sto : stolovi) {
                if (sto.getPozicijaStola().equals("2 Sank")) {
                    if (sto.isStatus() == 1) {
                        JOptionPane.showMessageDialog(this, "Izabrani sto je zauzet");
                        return;
                    }
                    broj = 2;
                    setColorBtn(broj);
                    statusButtona = true;
                    izabraniSto = sto;
                    fp.setSto(izabraniSto, broj);
                    dalipostoji = true;
                }
            }
            if (dalipostoji == false) {
                JOptionPane.showMessageDialog(this, "Greska sa stolovima! ");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vec ste stavili porudzbenicu na sto! ");
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (daLiJePrikaz == true) {
            JOptionPane.showMessageDialog(this, "Ovo je samo prikaz grafika sale! ");
            return;
        }
        boolean dalipostoji = false;
        if (statusButtona == false) {

            FKreirajPorudzbenicu fp = (FKreirajPorudzbenicu) getParent();
            for (Sto sto : stolovi) {
                if (sto.getPozicijaStola().equals("1 Basta")) {
                    if (sto.isStatus() == 1) {
                        JOptionPane.showMessageDialog(this, "Izabrani sto je zauzet");
                        return;
                    }
                    broj = 3;
                    setColorBtn(broj);
                    statusButtona = true;
                    izabraniSto = sto;
                    fp.setSto(izabraniSto, broj);
                    dalipostoji = true;
                }
            }
            if (dalipostoji == false) {
                JOptionPane.showMessageDialog(this, "Greska sa stolovima! ");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vec ste stavili porudzbenicu na sto! ");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (daLiJePrikaz == true) {
            JOptionPane.showMessageDialog(this, "Ovo je samo prikaz grafika sale! ");
            return;
        }
        boolean dalipostoji = false;
        if (statusButtona == false) {

            FKreirajPorudzbenicu fp = (FKreirajPorudzbenicu) getParent();
            for (Sto sto : stolovi) {
                if (sto.getPozicijaStola().equals("2 Basta")) {
                    if (sto.isStatus() == 1) {
                        JOptionPane.showMessageDialog(this, "Izabrani sto je zauzet");
                        return;
                    }
                    broj = 4;
                    setColorBtn(broj);
                    statusButtona = true;
                    izabraniSto = sto;
                    fp.setSto(izabraniSto, broj);
                    dalipostoji = true;
                }
            }
            if (dalipostoji == false) {
                JOptionPane.showMessageDialog(this, "Greska sa stolovima! ");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vec ste stavili porudzbenicu na sto! ");
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (daLiJePrikaz == true) {
            JOptionPane.showMessageDialog(this, "Ovo je samo prikaz grafika sale! ");
            return;
        }
        boolean dalipostoji = false;
        if (statusButtona == false) {

            FKreirajPorudzbenicu fp = (FKreirajPorudzbenicu) getParent();
            for (Sto sto : stolovi) {
                if (sto.getPozicijaStola().equals("1 Sredina")) {
                    if (sto.isStatus() == 1) {
                        JOptionPane.showMessageDialog(this, "Izabrani sto je zauzet");
                        return;
                    }
                    broj = 5;
                    setColorBtn(broj);
                    statusButtona = true;
                    izabraniSto = sto;
                    fp.setSto(izabraniSto, broj);
                    dalipostoji = true;
                }
            }
            if (dalipostoji == false) {
                JOptionPane.showMessageDialog(this, "Greska sa stolovima! ");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vec ste stavili porudzbenicu na sto! ");
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if (daLiJePrikaz == true) {
            JOptionPane.showMessageDialog(this, "Ovo je samo prikaz grafika sale! ");
            return;
        }
        boolean dalipostoji = false;
        if (statusButtona == false) {

            FKreirajPorudzbenicu fp = (FKreirajPorudzbenicu) getParent();
            for (Sto sto : stolovi) {
                if (sto.getPozicijaStola().equals("2 Sredina")) {
                    if (sto.isStatus() == 1) {
                        JOptionPane.showMessageDialog(this, "Izabrani sto je zauzet");
                        return;
                    }
                    broj = 6;
                    setColorBtn(broj);
                    statusButtona = true;
                    izabraniSto = sto;
                    fp.setSto(izabraniSto, broj);
                    dalipostoji = true;
                }
            }
            if (dalipostoji == false) {
                JOptionPane.showMessageDialog(this, "Greska sa stolovima! ");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vec ste stavili porudzbenicu na sto! ");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jbtnponistiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnponistiActionPerformed
        // TODO add your handling code here:
        if (broj != 0) {
            statusButtona = false;
            setColorBtnNijeZauzeto(broj);
        }
        else{
            JOptionPane.showMessageDialog(this, "Niste oznacili koji sto zelite da zauzmete! ");
        }

    }//GEN-LAST:event_jbtnponistiActionPerformed

    private void jbtnizlazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnizlazActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbtnizlazActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jbtnizlaz;
    private javax.swing.JButton jbtnponisti;
    // End of variables declaration//GEN-END:variables

    private void setColorBtn(int i) {
        if (i == 1) {
            jButton1.setBackground(new Color(255, 51, 0));
        }
        if (i == 2) {
            jButton2.setBackground(new Color(255, 51, 0));
        }
        if (i == 3) {
            jButton3.setBackground(new Color(255, 51, 0));
        }
        if (i == 4) {
            jButton4.setBackground(new Color(255, 51, 0));
        }
        if (i == 5) {
            jButton5.setBackground(new Color(255, 51, 0));
        }
        if (i == 6) {
            jButton6.setBackground(new Color(255, 51, 0));
        }

    }

    private void setColorBtnNijeZauzeto(int i) {
        if (i == 1) {
            jButton1.setBackground(new Color(0, 255, 0));
        }
        if (i == 2) {
            jButton2.setBackground(new Color(0, 255, 0));
        }
        if (i == 3) {
            jButton3.setBackground(new Color(0, 255, 0));
        }
        if (i == 4) {
            jButton4.setBackground(new Color(0, 255, 0));
        }
        if (i == 5) {
            jButton5.setBackground(new Color(0, 255, 0));
        }
        if (i == 6) {
            jButton6.setBackground(new Color(0, 255, 0));
        }
    }

    public List<Sto> dajMiSTolove() {
        ServerskiOdgovor so = Kontroler.getInstanca().vratiStolove();
        List<Sto> stolovi = new ArrayList<>();
        if (so.isUspesno()) {
            List<InterfaceObjekat> lista = (List<InterfaceObjekat>) so.getOdgovor();

            for (InterfaceObjekat objekat : lista) {
                stolovi.add((Sto) objekat);
            }

        } else {
            JOptionPane.showMessageDialog(this, so.getPoruka(), "Greska", JOptionPane.ERROR_MESSAGE);
        }

        return stolovi;
    }

    private void popuni() {
        for (Sto sto : stolovi) {
            if (sto.getPozicijaStola().equals("1 Sank")) {
                if (sto.isStatus() == 1) {
                    s1 = "popunjen";
                    broj = 1;
                    setColorBtn(broj);
                }
            }
            if (sto.getPozicijaStola().equals("2 Sank")) {
                if (sto.isStatus() == 1) {
                    s2 = "popunjen";
                    broj = 2;
                    setColorBtn(broj);
                }
            }
            if (sto.getPozicijaStola().equals("1 Basta")) {
                if (sto.isStatus() == 1) {
                    s3 = "popunjen";
                    broj = 3;
                    setColorBtn(broj);
                }
            }
            if (sto.getPozicijaStola().equals("2 Basta")) {
                if (sto.isStatus() == 1) {
                    s4 = "popunjen";
                    broj = 4;
                    setColorBtn(broj);
                }
            }
            if (sto.getPozicijaStola().equals("1 Sredina")) {
                if (sto.isStatus() == 1) {
                    s5 = "popunjen";
                    broj = 5;
                    setColorBtn(broj);
                }
            }
            if (sto.getPozicijaStola().equals("2 Sredina")) {
                if (sto.isStatus() == 1) {
                    s6 = "popunjen";
                    broj = 6;
                    setColorBtn(broj);
                }
            }
        }
    }

}
